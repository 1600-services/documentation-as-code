# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

    build:
        #Name of the job
        name: Build github pages
        runs-on: ubuntu-latest
        env: 
            MARP_VERSION: 0.21.1
        steps:
           # Checks out a copy of your repository on the ubuntu-latest machine
           # https://github.com/actions/checkout
          - name: Checkout code
            uses: actions/checkout@v2 
            with:
                clean: true
                token: ${{ github.token }}
    
          # Runs the website build
          - run: sudo  wget -qO- https://github.com/marp-team/marp-cli/releases/download/v0.21.1/marp-cli-v$MARP_VERSION-linux.tar.gz | tar xvz
          - run: chmod +x marp && export PATH=$PATH:$(pwd) &&  mkdir site && marp slides/README.md --html -o site/index.html
          - run: ls -R site
          - run: du -sh site
          # https://github.com/actions/upload-artifact
          - uses: actions/upload-artifact@v2
            with:
              name: site
              path: './'



  # Single deploy job since we're just deploying
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: [build]
        steps:    
        - name: Download artifact
          uses: actions/download-artifact@v2
          with:
            name: site
            path: './'
        - run: ls -R 
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v3
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            artifact_name: 'site'
        - run: ls -R site